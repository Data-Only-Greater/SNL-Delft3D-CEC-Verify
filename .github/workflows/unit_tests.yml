name: Unit Tests
on: [push, pull_request]
jobs:
  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ['3.9']
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: 'true'
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: _snld3d
          environment-file: environment.yml
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false
      - run: |
          conda info
      - name: Install package
        run: |
          pip install --no-deps -e .
      - name: Run tests
        run: |
          conda install -y pytest pytest-cov pytest-mock
          pytest --cov --cov-config=setup.cfg --cov-report=xml tests
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
            fail_ci_if_error: true
    - name: Status Check âœ…
        if: ${{ success() }}
        # set the merge commit status check
        # using GitHub REST API
        # see https://docs.github.com/en/rest/reference/repos#create-a-commit-status
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "context": "Unit Tests",
            "state": "success",
            "description": "Unit Tests passed",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'
      - name: Status Check ðŸš¨
        if: ${{ failure() }}
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "context": "Unit Tests",
            "state": "failure",
            "description": "Unit Tests failed",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'
