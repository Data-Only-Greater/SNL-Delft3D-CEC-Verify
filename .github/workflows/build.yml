name: Build Release

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    name: Conda Package Build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    env:
      conda-directory: ${{ github.workspace }}/.conda
    if: github.repository == 'H0R5E/SNL-Delft3D-CEC-Verify'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: 'true'
      - uses: conda-incubator/setup-miniconda@v2
        with:
          conda-build-version: "*"
      - name: Store CONDA variable
        run: |
          echo "CONDA=$CONDA" >> $GITHUB_ENV
      - name: Build conda package
        run: |
          conda build --no-anaconda-upload --override-channels -c conda-forge recipe
        working-directory: ${{env.conda-directory}}
      - uses: actions/upload-artifact@v3
        with:
          name: conda-package
          path: ${{env.CONDA}}/conda-bld/noarch/snl-delft3d-cec-verify-*.tar.bz2
          if-no-files-found: error
  test:
    name: Conda Package Test
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ['3.9', '3.10']
    defaults:
      run:
        shell: bash -l {0}
    env:
      conda-directory: ${{ github.workspace }}/.conda
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: conda-package
      - name: Get package name
      - run: |
          pattern="snl-delft3d-cec-verify-*.tar.bz2"
          files=( $pattern )
          echo "CONDA_PKG=${files[0]}" >> $GITHUB_ENV
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          conda-build-version: "*"
      - name: Install conda package
        run: |
          conda install --override-channels -c conda-forge $CONDA_PKG pytest pytest-mock
      - name: Extract test files
        run: |
          cph extract $CONDA_PKG --dest src
      - name: Test package
        run: |
          pytest
        working-directory: src/info/test
  upload:
    name: Conda Package Upload
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: conda-package
      - uses: conda-incubator/setup-miniconda@v2
      - name: Upload conda package
        run: |
          conda install -y anaconda-client
          anaconda -t ${{ secrets.CONDA_TOKEN }} upload -u dataonlygreater snl-delft3d-cec-verify-*.tar.bz2
  zip_examples:
    name: Upload Examples
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: 'true'
      - name: Set GIT_DESCRIBE_TAG
        run: echo "GIT_DESCRIBE_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
      - uses: papeloto/action-zip@v1
        with:
          files: examples/
          dest: examples.zip
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: examples.zip
          tag: ${{ env.GIT_DESCRIBE_TAG }}
