name: Documentation
on: [push, pull_request]
jobs:
  doctest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ['3.9']
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: 'true'
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: _snld3d
          environment-file: .conda/environment.yml
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false
      - run: |
          conda info
      - name: Install package
        run: |
          pip install --no-deps -e .
      - name: Run tests
        run: |
          pytest --doctest-modules src
  build:
    runs-on: ubuntu-latest
    needs: doctest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: 'true'
          fetch-depth: 0
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: _snld3d
          environment-file: .conda/environment.yml
          python-version: '3.9'
          auto-activate-base: false
      - run: |
          conda info
      - name: Install package
        run: |
          pip install --no-deps -e .
      - name: Create build directory
        run: echo "BUILD_DIR=$(mktemp -d -t pages-XXXXXXXXXX)" >> $GITHUB_ENV
      - name: Build docs
        run: |
          sphinx-build -b html -W --keep-going ./docs ${{ env.BUILD_DIR }}
      - name: Deploy
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.BUILD_DIR }}
  status:
    name: Documentation
    runs-on: ubuntu-latest
    needs: build
    steps:
      - run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "context": "Documentation",
            "state": "success",
            "description": "Documentation deployed",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'
