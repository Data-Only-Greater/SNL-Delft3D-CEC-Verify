name: Documentation
on: [push, pull_request]
jobs:
  doctest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ['3.9']
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: 'true'
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: _snld3d
          environment-file: environment.yml
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false
      - run: |
          conda config --env --add channels conda-forge
          conda info
      - name: Install package
        run: |
          pip install --no-deps -e .
      - name: Run tests
        run: |
          conda install -y pytest
          pytest --doctest-modules .\src
  docs:
    runs-on: ubuntu-latest
    needs: doctest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: 'true'
      - uses: ammaraskar/sphinx-action@master
        with:
          docs-folder: "docs/"
      - name: Commit documentation changes
        run: |
          git clone ${{ github.server_url }}/${{ github.repository }}.git --branch gh-pages --single-branch gh-pages
          cp -r docs/_build/html/* gh-pages/
          cd gh-pages
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Update documentation" -a || true
          # The above command will fail if no changes were present, so we ignore
          # the return code.
        - name: Push changes
          uses: ad-m/github-push-action@master
          with:
            branch: gh-pages
            directory: gh-pages
            github_token: ${{ secrets.GITHUB_TOKEN }}
  status:
    name: Documentation
    runs-on: ubuntu-latest
    needs: docs
    steps:
      - run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "context": "Documentation",
            "state": "success",
            "description": "Documentation deployed",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'
